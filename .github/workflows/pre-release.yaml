name: Pre-release

on:
  push:
    branches:
      - main

permissions:
  id-token: write
  contents: read

env:
  YQ_VERSION: "4.25.1"
  LAMBDA_ZIP_VERSION: "${{ github.ref_name }}"

jobs:
  release_lambda_zip:
    runs-on: ubuntu-latest
    outputs:
      url: ${{ steps.forwarder-package.outputs.url }}
      bucket: ${{ steps.forwarder-package.outputs.bucket }}
      key: ${{ steps.forwarder-package.outputs.key }}
    steps:
      - uses: actions/checkout@v4
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: "arn:aws:iam::887822303684:role/axiom-cloudwatch-forwarder-pre-releas-20241009050747493200000001"
          role-session-name: pre-release
      - run: cd src && zip forwarder.zip *.py
      - name: Release to Dev
        run: aws s3 cp --acl public-read ./src/forwarder.zip s3://axiom-cloudformation-dev/axiom-cloudwatch-forwarder/$LAMBDA_ZIP_VERSION/
      - name: Set output
        id: forwarder-package
        run: |
          echo "url=s3://axiom-cloudformation-dev/axiom-cloudwatch-forwarder/$LAMBDA_ZIP_VERSION" >> "$GITHUB_OUTPUT"
          echo "bucket=axiom-cloudformation-dev" >> "$GITHUB_OUTPUT"
          echo "key=axiom-cloudwatch-forwarder/$LAMBDA_ZIP_VERSION/forwarder.zip" >> "$GITHUB_OUTPUT"
  release_cloudformation_stacks:
    runs-on: ubuntu-latest
    needs:
      - release_lambda_zip
    steps:
      - uses: actions/checkout@v4
      - run: wget https://github.com/mikefarah/yq/releases/download/v$YQ_VERSION/yq_linux_amd64.tar.gz -O - | tar xz && mv yq_linux_amd64 /usr/local/bin/yq
      - run: mkdir build
      - run:
          yq '.Resources.ForwarderLambda.Properties.Code.S3Bucket = "${{ needs.python.outputs.bucket }}" |
          .Resources.ForwarderLambda.Properties.Code.S3Key = "${{ needs.python.outputs.key }}"' cloudformation-stacks/forwarder.template.yaml > build/axiom-cloudwatch-forwarder-$LAMBDA_ZIP_VERSION-cloudformation-stack.yaml
      - run:
          yq '.Resources.SubscriberLambda.Properties.Code.S3Bucket = "${{ needs.python.outputs.bucket }}" |
          .Resources.SubscriberLambda.Properties.Code.S3Key = "${{ needs.python.outputs.key }}"' cloudformation-stacks/subscriber.template.yaml > build/axiom-cloudwatch-subscriber-$LAMBDA_ZIP_VERSION-cloudformation-stack.yaml
      - run:
          yq '.Resources.UnsubscriberLambda.Properties.Code.S3Bucket = "${{ needs.python.outputs.bucket }}" |
          .Resources.UnsubscriberLambda.Properties.Code.S3Key = "${{ needs.python.outputs.key }}"' cloudformation-stacks/unsubscriber.template.yaml > build/axiom-cloudwatch-unsubscriber-$LAMBDA_ZIP_VERSION-cloudformation-stack.yaml
      - run:
          yq '.Resources.ListenerLambda.Properties.Code.S3Bucket = "${{ needs.python.outputs.bucket }}" |
          .Resources.ListenerLambda.Properties.Code.S3Key = "${{ needs.python.outputs.key }}"'  cloudformation-stacks/listener.template.yaml > build/axiom-cloudwatch-listener-$LAMBDA_ZIP_VERSION-cloudformation-stack.yaml
      - run: cat build/*
      - uses: actions/upload-artifact@v4
        with:
          name: stacks
          path: build/*
          retention-days: 1
